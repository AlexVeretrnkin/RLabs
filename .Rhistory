"Оригінальний графік" = 'black',
"Рухоме середнє 5" = "blue",
"Рухоме середнє 12" = "orange"
)
) +
scale_x_continuous(breaks = seq(2009, 2024, by = 1)) +  # Деталізація підписів
labs(
title = "Використання Google як пошукового рушія",
x = "Рік",
y = "Використання Google (%)",
colour = 'Графіки'
) +
theme_minimal()
#------ 3. Декомпозиція часового ряду ------
decomposed_google_ts <- decompose(google_ts, type = "additive")
plot(decomposed_google_ts)
data <- google_ts
# Використання decompose
decomposed <- decomposed_google_ts
# Перетворення результатів у data.frame для ggplot
decomposed_df <- data.frame(
Time = time(google_ts),
Observed = as.numeric(decomposed_google_ts$x),
Trend = as.numeric(decomposed_google_ts$trend),
Seasonal = as.numeric(decomposed_google_ts$seasonal),
Random = as.numeric(decomposed_google_ts$random)
) %>%
pivot_longer(cols = -Time, names_to = "Component", values_to = "Value")
# Побудова графіка
ggplot(decomposed_df, aes(x = Time, y = Value, color = Component)) +
geom_line() +
facet_wrap(~ Component, scales = "free_y") +
theme_minimal() +
labs(
title = "Декомпозиція",
x = "Рік",
y = "Значення",
color = "Component"
)
#------ 4. Побудова корелограми та часткової корелограми ------
acf(google_ts, main="Корелограма (ACF) часового ряду")
pacf(google_ts, main="Часткова корелограма (PACF) часового ряду")
#------ 5. Трансформація часового ряду для досягнення стаціонарності ------
# Тест Дікі-Фуллера для перевірки стаціонарності
# Якщо p-value < 0.05, відхиляємо H₀, і ряд вважається стаціонарним.
ts_frequency <- frequency(google_ts)
adf.test(google_ts, alternative="stationary", k = ts_frequency)
# Якщо ряд не стаціонарний, можна застосувати логарифмування та диференціювання
log_google_ts <- log(google_ts)
diff_google_ts <- diff(google_ts)
diff_log_google_ts <- diff(log_google_ts)
# Повторний тест
adf.test(diff_log_google_ts, alternative="stationary", k = ts_frequency)
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_log_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Відображаємо прогноз
plot(hw_forecast, main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_log_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h=24)
# Відображаємо прогноз
plot(arima_forecast, main="Прогноз моделлю ARIMA", ylab="diff_google_ts", xlab="Рік")
#------ 7. Аналіз залишків та оцінка якості прогнозу ------
# Залишки моделі ARIMA
arima_residuals <- residuals(auto_arima_model)
# Корелограма залишків
acf(arima_residuals, main="ACF залишків моделі ARIMA")
# Тест Льюнга-Бокса:
# P-value менше 0.05 вказує на наявність автокореляції в залишках,
# що може свідчити про недосконалість моделі.
Box.test(arima_residuals, type="Ljung-Box", lag = 12)
# Залишки моделі Хольта-Вінтерса
hw_residuals <- residuals(hw_model)
# Корелограма залишків
acf(hw_residuals, main="ACF залишків моделі Хольта-Вінтерса")
# Тест Льюнга-Бокса
Box.test(hw_residuals, type="Ljung-Box", lag = 12)
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(log_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Відображаємо прогноз
plot(hw_forecast, main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(log_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h=24)
# Відображаємо прогноз
plot(arima_forecast, main="Прогноз моделлю ARIMA", ylab="diff_google_ts", xlab="Рік")
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Відображаємо прогноз
plot(hw_forecast, main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h=24)
# Відображаємо прогноз
plot(arima_forecast, main="Прогноз моделлю ARIMA", ylab="diff_google_ts", xlab="Рік")
#------ 7. Аналіз залишків та оцінка якості прогнозу ------
# Залишки моделі ARIMA
arima_residuals <- residuals(auto_arima_model)
# Корелограма залишків
acf(arima_residuals, main="ACF залишків моделі ARIMA")
# Тест Льюнга-Бокса:
# P-value менше 0.05 вказує на наявність автокореляції в залишках,
# що може свідчити про недосконалість моделі.
Box.test(arima_residuals, type="Ljung-Box", lag = 12)
# Залишки моделі Хольта-Вінтерса
hw_residuals <- residuals(hw_model)
# Корелограма залишків
acf(hw_residuals, main="ACF залишків моделі Хольта-Вінтерса")
# Тест Льюнга-Бокса
Box.test(hw_residuals, type="Ljung-Box", lag = 12)
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Відображаємо прогноз
plot(hw_forecast, main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h=24)
# Відображаємо прогноз
plot(arima_forecast, main="Прогноз моделлю ARIMA", ylab="diff_google_ts", xlab="Рік")
#------ 7. Аналіз залишків та оцінка якості прогнозу ------
# Залишки моделі ARIMA
arima_residuals <- residuals(auto_arima_model)
# Корелограма залишків
acf(arima_residuals, main="ACF залишків моделі ARIMA")
# Тест Льюнга-Бокса:
# P-value менше 0.05 вказує на наявність автокореляції в залишках,
# що може свідчити про недосконалість моделі.
Box.test(arima_residuals, type="Ljung-Box", lag = 12)
# Залишки моделі Хольта-Вінтерса
hw_residuals <- residuals(hw_model)
# Корелограма залишків
acf(hw_residuals, main="ACF залишків моделі Хольта-Вінтерса")
# Тест Льюнга-Бокса
Box.test(hw_residuals, type="Ljung-Box", lag = 12)
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Останнє значення початкового ряду (перед диференціюванням)
last_value <- tail(google_ts, 1)
# Відновлення прогнозу до початкових значень
hw_forecast_original <- cumsum(hw_forecast$mean) + last_value
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Останнє значення початкового ряду (перед диференціюванням)
last_value <- tail(google_ts, 1)
# Відновлення прогнозу до початкових значень
hw_forecast_original <- cumsum(hw_forecast$mean)
# Відображаємо прогноз
plot(hw_forecast_original, main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h=24)
# Відновлення прогнозу до початкових значень
arima_forecast_original <- cumsum(arima_forecast$mean) + last_value
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Останнє значення початкового ряду (перед диференціюванням)
last_value <- tail(google_ts, 1)
# Відновлення прогнозу до початкових значень
hw_forecast_original <- cumsum(hw_forecast$mean)
# Відображаємо прогноз
plot(hw_forecast_original, main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h=24)
# Відновлення прогнозу до початкових значень
arima_forecast_original <- cumsum(arima_forecast$mean)
# Відображаємо прогноз
plot(arima_forecast_original, main="Прогноз моделлю ARIMA", ylab="diff_google_ts", xlab="Рік")
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Відображаємо прогноз
plot(hw_forecast, main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h=24)
# Відображаємо прогноз
plot(arima_forecast, main="Прогноз моделлю ARIMA", ylab="diff_google_ts", xlab="Рік")
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Останнє значення початкового ряду (перед диференціюванням)
last_value <- tail(google_ts, 1)
# Відновлення прогнозу до початкових значень
hw_forecast_original <- cumsum(hw_forecast$mean) + last_value
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h=24)
# Останнє значення початкового ряду (перед диференціюванням)
last_value <- as.numeric(tail(google_ts, 1))
# Відновлення прогнозу до початкових значень
hw_forecast_original <- cumsum(hw_forecast$mean) + last_value
# Відображення відновленого прогнозу
plot(hw_forecast_original, type = "l", col = "blue", main = "Прогноз методом Хольта-Вінтерса (відновлений)", xlab = "Місяці", ylab = "Google")
# Відображаємо прогноз
plot(hw_forecast, main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h=24)
# Відображаємо прогноз
plot(arima_forecast, main="Прогноз моделлю ARIMA", ylab="diff_google_ts", xlab="Рік")
# Відображення відновленого прогнозу
plot(ts(hw_forecast_original, start = end(google_ts)[1] + end(google_ts)[2] / frequency(google_ts), frequency = frequency(google_ts)),
type = "l", col = "blue", main = "Прогноз методом Хольта-Вінтерса (відновлений)",
xlab = "Рік", ylab = "Google")
# Відновлення прогнозу до початкових значень
arima_forecast_original <- cumsum(arima_forecast$mean) + last_value
# Відображення відновленого прогнозу
plot(ts(arima_forecast_original, start = end(google_ts)[1] + end(google_ts)[2] / frequency(google_ts), frequency = frequency(google_ts)),
type = "l", col = "red", main = "Прогноз методом ARIMA (відновлений)",
xlab = "Рік", ylab = "Google")
plot(ts(hw_forecast_original, start = end(google_ts)[1] + end(google_ts)[2] / frequency(google_ts), frequency = frequency(google_ts)),
type = "l", col = "blue", ylim = range(hw_forecast_original, arima_forecast_original),
main = "Порівняння прогнозів", xlab = "Рік", ylab = "Google")
lines(ts(arima_forecast_original, start = end(google_ts)[1] + end(google_ts)[2] / frequency(google_ts), frequency = frequency(google_ts)),
col = "red", lty = 2)
legend("topleft", legend = c("Хольт-Вінтерс", "ARIMA"), col = c("blue", "red"), lty = c(1, 2))
# Відновлення прогнозу до початкових значень
hw_forecast_original <- cumsum(hw_forecast$mean) + last_value
# Відображаємо прогноз
plot(hw_forecast_original, main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
# Відображаємо прогноз
plot(hw_forecast_original, type = "l", main="Прогноз методом Хольта-Вінтерса", ylab="diff_google_ts", xlab="Рік")
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h = 24)
# Відображаємо прогноз
plot(hw_forecast,
main = "Прогноз методом Хольта-Вінтерса",
ylab = "diff_google_ts",
xlab = "Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h = 24)
# Відображаємо прогноз
plot(arima_forecast,
main = "Прогноз моделлю ARIMA",
ylab = "diff_google_ts",
xlab = "Рік")
# Отримуємо останнє значення початкового ряду (перетворюємо в число)
last_value <- as.numeric(tail(google_ts, 1))
# Відновлення до початкових величин
arima_forecast_original <- cumsum(arima_forecast$mean) + last_value
# Відновлений часовий ряд з правильною шкалою часу
arima_forecast_ts <- ts(
arima_forecast_original,
start = c(2009, length(google_ts) / 12 + 1 / 12),
frequency = 12
)
# Графік початкового ряду
plot(google_ts, type = "l", col = "blue", xlim = c(2009, 2012),
main = "Прогноз ARIMA з правильною шкалою часу", xlab = "Рік", ylab = "Google")
# Додавання прогнозу
lines(arima_forecast_ts, col = "red", lty = 2)
# Легенда
legend("topleft", legend = c("Початковий ряд", "Прогноз ARIMA"),
col = c("blue", "red"), lty = c(1, 2))
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h = 24)
# Відображаємо прогноз
plot(hw_forecast,
main = "Прогноз методом Хольта-Вінтерса",
ylab = "diff_google_ts",
xlab = "Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h = 24)
# Відображаємо прогноз
plot(arima_forecast,
main = "Прогноз моделлю ARIMA",
ylab = "diff_google_ts",
xlab = "Рік")
# Отримуємо останнє значення початкового ряду (перетворюємо в число)
last_value <- as.numeric(tail(google_ts, 1))
# Відновлення до початкових величин
arima_forecast_original <- cumsum(arima_forecast$mean) + last_value
# Відновлений часовий ряд з правильною шкалою часу
arima_forecast_ts <- ts(
arima_forecast_original,
start = c(2024, length(google_ts) / 12 + 1 / 12),
frequency = 12
)
# Графік початкового ряду
plot(google_ts, type = "l", col = "blue", xlim = c(2009, 2012),
main = "Прогноз ARIMA з правильною шкалою часу", xlab = "Рік", ylab = "Google")
# Додавання прогнозу
lines(arima_forecast_ts, col = "red", lty = 2)
# Легенда
legend("topleft", legend = c("Початковий ряд", "Прогноз ARIMA"),
col = c("blue", "red"), lty = c(1, 2))
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h = 24)
# Відображаємо прогноз
plot(hw_forecast,
main = "Прогноз методом Хольта-Вінтерса",
ylab = "diff_google_ts",
xlab = "Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h = 24)
# Відображаємо прогноз
plot(arima_forecast,
main = "Прогноз моделлю ARIMA",
ylab = "diff_google_ts",
xlab = "Рік")
# Отримуємо останнє значення початкового ряду (перетворюємо в число)
last_value <- as.numeric(tail(google_ts, 1))
# Відновлення до початкових величин
arima_forecast_original <- cumsum(arima_forecast$mean) + last_value
# Відновлений часовий ряд з правильною шкалою часу
arima_forecast_ts <- ts(
arima_forecast_original,
start = c(2009, length(google_ts) / 12 + 1 / 12),
frequency = 12
)
# Графік початкового ряду
plot(google_ts, type = "l", col = "blue", xlim = c(2009, 2026),
main = "Прогноз ARIMA з правильною шкалою часу", xlab = "Рік", ylab = "Google")
# Додавання прогнозу
lines(arima_forecast_ts, col = "red", lty = 2)
# Легенда
legend("topleft", legend = c("Початковий ряд", "Прогноз ARIMA"),
col = c("blue", "red"), lty = c(1, 2))
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h = 24)
# Відображаємо прогноз
plot(hw_forecast,
main = "Прогноз методом Хольта-Вінтерса",
ylab = "diff_google_ts",
xlab = "Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h = 24)
# Відображаємо прогноз
plot(arima_forecast,
main = "Прогноз моделлю ARIMA",
ylab = "diff_google_ts",
xlab = "Рік")
# Отримуємо останнє значення початкового ряду (перетворюємо в число)
last_value <- as.numeric(tail(google_ts, 1))
# Відновлення до початкових величин
arima_forecast_original <- cumsum(arima_forecast$mean) + last_value
# Відновлений часовий ряд з правильною шкалою часу
arima_forecast_ts <- ts(
arima_forecast_original,
start = c(2024, length(google_ts) / 12 + 1 / 12),
frequency = 12
)
# Графік початкового ряду
plot(google_ts, type = "l", col = "blue", xlim = c(2009, 2026),
main = "Прогноз ARIMA з правильною шкалою часу", xlab = "Рік", ylab = "Google")
# Додавання прогнозу
lines(arima_forecast_ts, col = "red", lty = 2)
# Легенда
legend("topleft", legend = c("Початковий ряд", "Прогноз ARIMA"),
col = c("blue", "red"), lty = c(1, 2))
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h = 24)
# Відображаємо прогноз
plot(hw_forecast,
main = "Прогноз методом Хольта-Вінтерса",
ylab = "diff_google_ts",
xlab = "Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h = 24)
# Відображаємо прогноз
plot(arima_forecast,
main = "Прогноз моделлю ARIMA",
ylab = "diff_google_ts",
xlab = "Рік")
# Отримуємо останнє значення початкового ряду (перетворюємо в число)
last_value <- as.numeric(tail(google_ts, 1))
# Відновлення до початкових величин
arima_forecast_original <- cumsum(arima_forecast$mean) + last_value
# Відновлений часовий ряд з правильною шкалою часу
arima_forecast_ts <- ts(
arima_forecast_original,
start = c(2023, length(google_ts) / 12 + 1 / 12),
frequency = 12
)
# Графік початкового ряду
plot(google_ts, type = "l", col = "blue", xlim = c(2009, 2026),
main = "Прогноз ARIMA з правильною шкалою часу", xlab = "Рік", ylab = "Google")
# Додавання прогнозу
lines(arima_forecast_ts, col = "red", lty = 2)
# Легенда
legend("topleft", legend = c("Початковий ряд", "Прогноз ARIMA"),
col = c("blue", "red"), lty = c(1, 2))
google_ts
#------ 6. Вибір моделі та прогнозування ------
# Модель Хольта-Вінтерса
hw_model <- HoltWinters(diff_google_ts)
# Прогноз на 24 місяці вперед
hw_forecast <- forecast(hw_model, h = 24)
# Відображаємо прогноз
plot(hw_forecast,
main = "Прогноз методом Хольта-Вінтерса",
ylab = "diff_google_ts",
xlab = "Рік")
# Автоматичний підбір моделі ARIMA
auto_arima_model <- auto.arima(diff_google_ts)
# Параметри моделі
auto_arima_model
# Прогноз на 24 місяці вперед
arima_forecast <- forecast(auto_arima_model, h = 24)
# Відображаємо прогноз
plot(arima_forecast,
main = "Прогноз моделлю ARIMA",
ylab = "diff_google_ts",
xlab = "Рік")
# Отримуємо останнє значення початкового ряду (перетворюємо в число)
last_value <- as.numeric(tail(google_ts, 1))
google_ts
# Відновлення до початкових величин
arima_forecast_original <- cumsum(arima_forecast$mean) + last_value
# Відновлений часовий ряд з правильною шкалою часу
arima_forecast_ts <- ts(
arima_forecast_original,
start = c(2023, 12),
frequency = 12
)
# Графік початкового ряду
plot(google_ts, type = "l", col = "blue", xlim = c(2009, 2026),
main = "Прогноз ARIMA з правильною шкалою часу", xlab = "Рік", ylab = "Google")
# Додавання прогнозу
lines(arima_forecast_ts, col = "red", lty = 2)
# Легенда
legend("topleft", legend = c("Початковий ряд", "Прогноз ARIMA"),
col = c("blue", "red"), lty = c(1, 2))
View(hw_forecast)
View(births_time_series_components)
